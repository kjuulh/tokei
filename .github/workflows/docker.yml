on:
  push:
    # Sequence of patterns matched against refs/tags
    #tags:
    #  - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

name: Docker release

env:
  DOCKER_HUB_SLUG: "kasperhermansen/tokei"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
        include:
          - arch: amd64
            dockerfile: ./Dockerfile.amd64
            platforms: linux/amd64
          - arch: arm64
            dockerfile: ./Dockerfile.arm
            platforms: linux/arm64
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        if: matrix.platforms != 'linux/amd64'
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v2
      - name: Docker meta
        id: docker_meta
        uses: marcelcoding/ghaction-docker-meta@v2
        with:
          tag-edge: true
          images: |
            ${{ env.DOCKER_HUB_SLUG }}
          tag-semver: |
            {{version}}
            {{major}}.{{minor}}
          flavor: alpine-${{ matrix.arch }}
          main-flavor: alpine
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        if: github.event_name != 'pull_request'
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build and Push to Docker
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          platforms: ${{ matrix.platforms }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
